- Propagate error better
- Remove globals::PHYSICAL_MEMORY_MANAGER
  - Make it transparent the same way hal::mm::curent() is abstracted from
	  hal users.
- PMM is full of weirdness
- Improve testing
	- aarch64_qemuvirt
		- launch the produced binary into qemu
		- should go quickly over `generic_main` and we should have a `run_tests`
		  function (for now it can just launch the test_pagetable_remap,
			test_elf_loader, etc... functions)
	- riscv64_qemuvirt
		- do the same as aarch64
	- kernel
	  - since the kernel only contains runtime stuff, we could use mocking ?
		- for exemple verify behavior of the PMM
		- later, when we have a scheduler, we can make sure that works too
		  (schedules the expected tasks etc...)
- hal_core::Range is a fucking mess, use the nice one everywhere
- mapping (hal::mm) and allocating (pmm) functions are returning PAddr and
  VAddr where it does not make sense...
	- Either return a usize (not super duper great), return a *T
	  (so that the recipient is a bit more on its toes) ?
